# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import monitor_pb2 as monitor__pb2


class MetricsServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendMetrics = channel.unary_unary(
        '/protobufs.MetricsService/SendMetrics',
        request_serializer=monitor__pb2.MetricsRequest.SerializeToString,
        response_deserializer=monitor__pb2.MetricsResponse.FromString,
        )
    self.Connect = channel.unary_unary(
        '/protobufs.MetricsService/Connect',
        request_serializer=monitor__pb2.Timestamp.SerializeToString,
        response_deserializer=monitor__pb2.Timestamp.FromString,
        )


class MetricsServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendMetrics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Connect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetricsServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendMetrics': grpc.unary_unary_rpc_method_handler(
          servicer.SendMetrics,
          request_deserializer=monitor__pb2.MetricsRequest.FromString,
          response_serializer=monitor__pb2.MetricsResponse.SerializeToString,
      ),
      'Connect': grpc.unary_unary_rpc_method_handler(
          servicer.Connect,
          request_deserializer=monitor__pb2.Timestamp.FromString,
          response_serializer=monitor__pb2.Timestamp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protobufs.MetricsService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
